{"version":3,"sources":["App.js","index.js"],"names":["Progress","styled","div","_templateObject","props","height","App","state","count","numberTimer","handleClick","clearTimeout","_this","random","Math","floor","stepDown","startSlow","bindingThis","Object","assertThisInitialized","setTimeout","teak","this","setState","react_default","a","createElement","className","round","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"iaAIA,IAAMA,QAAWC,EAAOC,IAAVC,IAGF,SAACC,GAAD,OAAWA,EAAMC,OAAS,OAoDvBC,6MA/CbC,MAAQ,CACNC,MAAO,EACPH,OAAQ,KAEVI,YAAc,OAMdC,YAAc,WACZC,aAAaC,EAAKH,aAElB,IAEII,EAASC,KAAKC,MADA,IACMD,KAAKD,UACzBG,EAAWH,EAAS,GAClBI,EAAYJ,EAAmB,IAATA,EACtBK,EAAWC,OAAAC,EAAA,EAAAD,CAAAP,GACbJ,EAAQ,EAEZI,EAAKH,YAAcY,WAAW,SAASC,IAErC,IAAIjB,GADJG,GAASQ,IACaH,EAAS,KAAO,EAClCL,EAAQK,GACVF,aAAaY,KAAKd,aAClBS,EAAYM,SAAS,CAAEhB,QAAOH,aAE1BG,EAAQS,IAAWD,EAAWH,EAAS,MAE3CF,aAAaY,KAAKd,aAClBc,KAAKd,YAAcY,WAAWC,EAlBzB,IAmBLJ,EAAYM,SAAS,CAAEhB,QAAOH,aAnBzB,2FANTM,aAAaY,KAAKd,8CA8BlB,OACEgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WAAMb,KAAKe,MAAMN,KAAKhB,MAAMC,QAC5BiB,EAAAC,EAAAC,cAAA,UAAQG,QAASP,KAAKb,aAAtB,SACAe,EAAAC,EAAAC,cAAC3B,EAAD,CAAUK,OAAQkB,KAAKhB,MAAMF,iBA1CnB0B,IAAMC,WCNxBC,IAASC,OAAOT,EAAAC,EAAAC,cAACQ,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.6c142cb8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport styled from \"styled-components\"\n\nconst Progress = styled.div`\n  background: green;\n  width: 50px;\n  height: ${(props) => props.height + 'px'};\n  margin: auto\n`\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n    height: 0\n  }\n  numberTimer = null\n\n  componentWillUnmount() {\n    clearTimeout(this.numberTimer)\n  }\n\n  handleClick = () => {\n    clearTimeout(this.numberTimer)\n\n    let ms = 16 \n    const maxNumber = 100000\n    let random = Math.floor(Math.random() * maxNumber)\n    let stepDown = random / 50 \n    const startSlow = random - (random * 0.05)\n    const bindingThis = this \n    let count = 0\n\n    this.numberTimer = setTimeout(function teak() {\n      count += stepDown\n      let height = count / (random / 100) * 4\n      if (count > random) {\n        clearTimeout(this.numberTimer)\n        bindingThis.setState({ count, height })\n      } else {\n        if (count > startSlow) stepDown = random / 1499\n        \n        clearTimeout(this.numberTimer)\n        this.numberTimer = setTimeout(teak, ms)\n        bindingThis.setState({ count, height })\n    }}, ms);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>{Math.round(this.state.count)}</div>\n        <button onClick={this.handleClick}>Click</button>\n        <Progress height={this.state.height}></Progress>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}