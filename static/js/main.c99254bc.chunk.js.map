{"version":3,"sources":["App.js","index.js"],"names":["Div","styled","div","_templateObject","props","height","App","state","count","numberTimer","handleClick","clearTimeout","_this","ms","random","Math","floor","stepDown","round","startSlow","bindingThis","Object","assertThisInitialized","setTimeout","teak","this","setState","react_default","a","createElement","className","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"iaAIA,IAAMA,QAAMC,EAAOC,IAAVC,IAGG,SAACC,GAAD,OAAWA,EAAMC,OAAS,OAoDvBC,6MA/CbC,MAAQ,CACNC,MAAO,EACPH,OAAQ,KAEVI,YAAc,OAMdC,YAAc,WACZC,aAAaC,EAAKH,aAElB,IAAII,EAAK,EAELC,EAASC,KAAKC,MADA,IACMD,KAAKD,UACvBG,EAAWF,KAAKG,MAAMJ,EAAS,MAAQ,EAEvCK,EAAqB,GAATL,EACZM,EAAWC,OAAAC,EAAA,EAAAD,CAAAT,GAEjBA,EAAKH,YAAcc,WAAW,SAASC,KACrCV,GAAUG,GACG,GACXN,aAAac,KAAKhB,aAClBW,EAAYM,SAAS,CAAElB,MAAO,EAAGH,OAAQ,MAErCS,EAASK,IAAWN,GAVb,IAYXF,aAAac,KAAKhB,aAClBgB,KAAKhB,YAAcc,WAAWC,EAAMX,GACpCO,EAAYM,SAAS,CAAElB,MAAOM,EAAQT,OAAQS,EAAM,IAAuB,MAC3ED,0FAzBJF,aAAac,KAAKhB,8CA8BlB,OACEkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WAAMJ,KAAKlB,MAAMC,OACjBmB,EAAAC,EAAAC,cAAA,UAAQE,QAASN,KAAKf,aAAtB,SACAiB,EAAAC,EAAAC,cAAC7B,EAAD,CAAKK,OAAQoB,KAAKlB,MAAMF,iBA1Cd2B,IAAMC,WCNxBC,IAASC,OAAOR,EAAAC,EAAAC,cAACO,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c99254bc.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport styled from \"styled-components\"\n\nconst Div = styled.div`\n  background: green;\n  width: 50px;\n  height: ${(props) => props.height + 'px'};\n  margin: auto\n`\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n    height: 0\n  }\n  numberTimer = null\n\n  componentWillUnmount() {\n    clearTimeout(this.numberTimer)\n  }\n\n  handleClick = () => {\n    clearTimeout(this.numberTimer)\n\n    let ms = 0 \n    const maxNumber = 100000\n    let random = Math.floor(Math.random() * maxNumber) \n    const stepDown = Math.round(random / 100) || 1 \n    const stepMs = 10 \n    const startSlow = random * 0.2 \n    const bindingThis = this \n\n    this.numberTimer = setTimeout(function teak() {\n      random -= stepDown\n      if (random < 0) {\n        clearTimeout(this.numberTimer)\n        bindingThis.setState({ count: 0, height: 0 })\n      } else {\n        if (random < startSlow) ms += stepMs\n        \n        clearTimeout(this.numberTimer)\n        this.numberTimer = setTimeout(teak, ms)\n        bindingThis.setState({ count: random, height: random / (maxNumber / 100) * 4 })\n    }}, ms);\n  }\n\n  render() {\n    let obj = this\n    return (\n      <div className=\"App\">\n        <div>{this.state.count}</div>\n        <button onClick={this.handleClick}>Click</button>\n        <Div height={this.state.height}></Div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}